- name: Prepare VM for Docker
  hosts: all
  become: true
  tasks:
 
    - name: Update apt repository and cache
      apt:
        update_cache: yes
    
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
    
    - name: Add docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    
    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present
    
    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
    
    - name: Adding user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes
    
    - name: Ensure docker service is running
      service:
        name: docker
        state: started
        enabled: true
    
    - name: Print logout message
      debug:
        msg: >
          The user "{{ ansible_user }}" has been added to the 'docker' group. Please log out and log back in for this change to take effect.

    
    - name: Verify docker installation
      shell: docker --version
      register: docker_version
      ignore_errors: yes
      args:
        executable: /bin/bash
    
    - name: Check docker installation success
      fail:
        msg: "Docker installation failed. Please check the logs and try again."
      when: docker_version.rc != 0
    
    - name: Print out docker version
      debug:
        msg: "Docker installed successfully. {{docker_version.stdout }}"

    - name: Passing AWS credentials to the container
      lineinfile:
        path: /etc/environment
        regexp: '^AWS_'
        insertafter: EOF
        line: "{{ item }}"
        state: present
      with_items:
        - "AWS_ACCESS_KEY_ID={{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        - "AWS_SECRET_ACCESS_KEY={{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        - "AWS_REGION={{ lookup('env', 'AWS_REGION') }}"

    - name: Launching source command
      shell: . /etc/environment
